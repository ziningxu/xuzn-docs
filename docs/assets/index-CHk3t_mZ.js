import{H as a,_ as u}from"./UniExample.vue_vue_type_style_index_0_lang-BxmrS0FW.js";import{d,r as p,o as g,g as c,w as n,f as r,a as t,b as l,n as f,e as i}from"./index-yT4Q7vfC.js";import"./App-BTwiwmkJ.js";const v=d({__name:"index",setup(m){const s=["functionLib/"];return(x,e)=>{const o=p("ElText");return g(),c(i(u),{"exp-keys":s},{pre:n(()=>e[0]||(e[0]=[r("h1",null,"函数库",-1)])),default:n(()=>[r("div",null,[e[5]||(e[5]=r("h3",{"data-id":""},"TS 描述",-1)),r("p",null,[t(o,null,{default:n(()=>e[1]||(e[1]=[l(" 可能会有差异，请直接在编辑器中查看你的版本对应的 ")])),_:1}),t(o,{type:"warning"},{default:n(()=>e[2]||(e[2]=[l(" TS ")])),_:1}),t(o,null,{default:n(()=>e[3]||(e[3]=[l(" 描述 ")])),_:1})]),t(i(a),null,{default:n(()=>e[4]||(e[4]=[r("pre",null,[r("code",{class:f("line-numbers language-ts")},`
export declare function clipboardWriteText(txt: any): Promise<void>;
type RGBType = [r: number, g: number, b: number];
export declare function hexToRgb(str: string): RGBType;
export declare function rgbToHex(a: number, b: number, c: number): string;
export declare function darken(color: string, level: number): string;
export declare function lighten(color: string, level: number): string;
export declare function getElePrimaryColor(color: string): string[];
export declare function cloneJson(json: any): any;
export declare function downloadFile(blob: Blob, filename: string): void;
export declare function splitNumber(val: string | number, separator?: string): string;
export declare function centerLineToHump(str: string, firstUpper?: boolean): string;
export declare function toHumpObj(val: Record<string, any>, first?: boolean): Record<string, any>;
export declare function useUniAttrs(): Record<string, any>;
export declare function toggleFullScreen(isFull?: boolean, el?: HTMLElement): Promise<void>;
export declare function sleep(time?: number): Promise<unknown>;
export declare function getUrlQueryToArray(url?: string): string[][];
export declare function getUrlQuery(url?: string): Record<string, string>;
export declare function getUrlQueryHasArray(url?: string): Record<string, string | string[]>;
        `)],-1)])),_:1})])]),_:1})}}});export{v as default};
